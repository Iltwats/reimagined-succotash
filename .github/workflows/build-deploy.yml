name: AWS Elastic Beanstalk Web App CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      # checkout the repository
      - name: checkout
        uses: actions/checkout@v2

      # Setting up environment for building jar file
      - name: Setup Java JDK
        uses: actions/setup-java@v2.5.0
        with:
          distribution: 'adopt'
          java-version: '8'
          cache: 'gradle'
          check-latest: true
      - run: ./gradlew build --no-daemon

      # Build and Upload the artifact
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build with Gradle
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: build
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: build/libs/  # path to find artifact location

      #Download the artifact which was uploaded in the build's job
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: Package

      #Read region code from region-code.json file
      - name: Read region name from file
        id: getRegionName
        run: echo "::set-output name=regionName::$(cat regionName)"

      #Deploy the artifact (JAR) into AWS Beanstalk
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ steps.getRegionName.outputs.regionName }}
          use_existing_version_if_available: false
          application_name: spring-boot-deploy
          environment_name: Springbootdeploy-env
          version_label: ${{github.SHA}}
          deployment_package: gs-spring-boot-0.0.1-SNAPSHOT.jar

      - name: 'AWS Deployment complete'
        run: echo Should be on EB now